[
  {
    "id": 1,
    "lang": "javascript",
    "code": "function greeting() {\n    console.log('Hello World');\n}",
    "score": 2,
    "explanation": "This code defines a JavaScript function named 'greeting' that logs the string 'Hello World' to the console."
  },
  {
    "id": 2,
    "lang": "javascript",
    "code": "function addNumbers(a, b) {\n    return a + b;\n}",
    "score": 2,
    "explanation": "This code defines a JavaScript function named 'addNumbers' that takes two parameters, 'a' and 'b', and returns their sum."
  },
  {
    "id": 3,
    "lang": "javascript",
    "code": "function multiplyNumbers(a, b) {\n    return a * b;\n}",
    "score": 2,
    "explanation": "This code defines a JavaScript function named 'multiplyNumbers' that takes two parameters, 'a' and 'b', and returns their product."
  },
  {
    "id": 4,
    "lang": "javascript",
    "code": "const fruits = ['apple', 'banana', 'orange'];\nconsole.log(fruits.length);",
    "score": 2,
    "explanation": "This code creates an array called 'fruits' with three elements: 'apple', 'banana', and 'orange'. Then, it logs the length of the array to the console."
  },
  {
    "id": 5,
    "lang": "javascript",
    "code": "let x = 5;\nif (x > 0) {\n    console.log('Positive number');\n} else {\n    console.log('Negative number');\n}",
    "score": 2,
    "explanation": "This code declares a variable 'x' and assigns it a value of 5. It then checks if 'x' is greater than 0. If it is, it logs the string 'Positive number' to the console; otherwise, it logs 'Negative number'."
  },{
    "id": 16,
    "lang": "javascript",
    "code": "function power(base, exponent) {\n    return base ** exponent;\n}",
    "score": 2,
    "explanation": "This JavaScript function named 'power' takes two parameters, 'base' and 'exponent', and returns the result of raising the 'base' to the 'exponent'."
  },
  {
    "id": 17,
    "lang": "javascript",
    "code": "function sumArray(arr) {\n    return arr.reduce((sum, num) => sum + num, 0);\n}",
    "score": 2,
    "explanation": "This JavaScript function named 'sumArray' takes an array as a parameter and uses the 'reduce' method to calculate the sum of all the numbers in the array."
  },
  {
    "id": 18,
    "lang": "javascript",
    "code": "function capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}",
    "score": 2,
    "explanation": "This JavaScript function named 'capitalize' takes a string as a parameter and returns the string with the first character capitalized."
  },
  {
    "id": 19,
    "lang": "javascript",
    "code": "function reverseArray(arr) {\n    return arr.reverse();\n}",
    "score": 2,
    "explanation": "This JavaScript function named 'reverseArray' takes an array as a parameter and reverses the order of its elements."
  },
  {
    "id": 20,
    "lang": "javascript",
    "code": "function findAverage(arr) {\n    const sum = arr.reduce((total, num) => total + num, 0);\n    return sum / arr.length;\n}",
    "score": 2,
    "explanation": "This JavaScript function named 'findAverage' takes an array as a parameter, calculates the sum of its elements using the 'reduce' method, and returns the average by dividing the sum by the length of the array."
  },
  {
    "id": 21,
    "lang": "javascript",
    "code": "function removeFalsyValues(arr) {\n    return arr.filter(Boolean);\n}",
    "score": 2,
    "explanation": "This JavaScript function named 'removeFalsyValues' takes an array as a parameter and uses the 'filter' method with the 'Boolean' function to remove all falsy values (e.g., false, null, 0, '', undefined, NaN) from the array."
  },
  {
    "id": 22,
    "lang": "javascript",
    "code": "function getRandomNumber(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}",
    "score": 2,
    "explanation": "This JavaScript function named 'getRandomNumber' takes a minimum value 'min' and a maximum value 'max' as parameters. It uses the 'Math.random' function to generate a random number between 'min' and 'max', inclusive, and then rounds it down to the nearest integer using 'Math.floor'."
  },
  {
    "id": 23,
    "lang": "javascript",
    "code": "function formatDate(date) {\n    const options = { year: 'numeric', month: 'long', day: 'numeric' };\n    return date.toLocaleDateString('en-US', options);\n}",
    "score": 2,
    "explanation": "This JavaScript function named 'formatDate' takes a date object as a parameter. It defines an 'options' object with the desired date formatting options. It then uses the 'toLocaleDateString' method with the 'en-US' locale and the 'options' object to format the date as a string with the full month name, day, and year in numeric format."
  },
  {
    "id": 24,
    "lang": "javascript",
    "code": "function removeDuplicates(arr) {\n    return [...new Set(arr)];\n}",
    "score": 2,
    "explanation": "This JavaScript function named 'removeDuplicates' takes an array as a parameter. It utilizes the 'Set' object to remove duplicate elements from the array by converting it to a Set and then spreading it back into an array using the spread syntax."
  },
  {
    "id": 25,
    "lang": "javascript",
    "code": "function calculateHypotenuse(a, b) {\n    return Math.sqrt(a ** 2 + b ** 2);\n}",
    "score": 2,
    "explanation": "This JavaScript function named 'calculateHypotenuse' takes the lengths of the two sides of a right triangle, 'a' and 'b', as parameters. It uses the Pythagorean theorem to calculate and return the length of the hypotenuse by taking the square root of the sum of the squares of 'a' and 'b'."
  },
  {
    "id": 26,
    "lang": "javascript",
    "code": "function countOccurrences(arr, num) {\n    return arr.filter(item => item === num).length;\n}",
    "score": 2,
    "explanation": "This JavaScript function named 'countOccurrences' takes an array 'arr' and a number 'num' as parameters. It uses the 'filter' method to create a new array containing only the elements that are equal to 'num'. The length of the filtered array is then returned, representing the count of occurrences of 'num' in 'arr'."
  },
  { 
    "id": 27,
    "lang": "javascript",
    "code": "function getRandomElement(arr) {\n    return arr[Math.floor(Math.random() * arr.length)];\n}",
    "score": 2,
    "explanation": "This JavaScript function named 'getRandomElement' takes an array 'arr' as a parameter. It generates a random index by multiplying 'Math.random()' with the length of the array and flooring the result using 'Math.floor()'. It then returns the element at the randomly generated index from the array."
  },
  {
    "id": 28,
    "lang": "javascript",
    "code": "function removeFalsyProperties(obj) {\n    return Object.fromEntries(Object.entries(obj).filter(([_, value]) => Boolean(value)));\n}",
    "score": 2,
    "explanation": "This JavaScript function named 'removeFalsyProperties' takes an object 'obj' as a parameter. It uses the 'Object.entries' method to get an array of key-value pairs from the object. It then applies the 'filter' method on the key-value pairs array, keeping only the entries where the value is truthy. Finally, it converts the filtered array back to an object using 'Object.fromEntries' and returns it."
  },
  {
    "id": 29,
    "lang": "javascript",
    "code": "function truncateString(str, maxLength) {\n    if (str.length > maxLength) {\n        return str.slice(0, maxLength) + '...';\n    }\n    return str;\n}",
    "score": 2,
    "explanation": "This JavaScript function named 'truncateString' takes a string 'str' and a maximum length 'maxLength' as parameters. It checks if the length of the string is greater than the maximum length. If it is, the string is truncated using the 'slice' method to extract the substring from index 0 to 'maxLength', and '...' is appended. If the string is not longer than the maximum length, it is returned as is."
  },
  {
    "id": 30,
    "lang": "javascript",
    "code": "function getUniqueValues(arr) {\n    return [...new Set(arr)];\n}",
    "score": 2,
    "explanation": "This JavaScript function named 'getUniqueValues' takes an array 'arr' as a parameter. It utilizes the 'Set' object to remove duplicate elements from the array by converting it to a Set and then spreading it back into an array using the spread syntax. The resulting array contains only unique values."
  }
]

