[
  {
    "id": 1,
    "lang": "javascript",
    "code": "function greeting() {\n    console.log('Hello World');\n}",
    "score": 2,
    "explanation": "This code defines a JavaScript function named 'greeting' that logs the string 'Hello World' to the console."
  },
  {
    "id": 2,
    "lang": "javascript",
    "code": "function addNumbers(a, b) {\n    return a + b;\n}",
    "score": 2,
    "explanation": "This code defines a JavaScript function named 'addNumbers' that takes two parameters, 'a' and 'b', and returns their sum."
  },
  {
    "id": 3,
    "lang": "javascript",
    "code": "function multiplyNumbers(a, b) {\n    return a * b;\n}",
    "score": 2,
    "explanation": "This code defines a JavaScript function named 'multiplyNumbers' that takes two parameters, 'a' and 'b', and returns their product."
  },
  {
    "id": 4,
    "lang": "javascript",
    "code": "const fruits = ['apple', 'banana', 'orange'];\nconsole.log(fruits.length);",
    "score": 2,
    "explanation": "This code creates an array called 'fruits' with three elements: 'apple', 'banana', and 'orange'. Then, it logs the length of the array to the console."
  },
  {
    "id": 5,
    "lang": "javascript",
    "code": "let x = 5;\nif (x > 0) {\n    console.log('Positive number');\n} else {\n    console.log('Negative number');\n}",
    "score": 2,
    "explanation": "This code declares a variable 'x' and assigns it a value of 5. It then checks if 'x' is greater than 0. If it is, it logs the string 'Positive number' to the console; otherwise, it logs 'Negative number'."
  },
  {
    "id": 6,
    "lang": "html",
    "code": "<h5>Hello, World!</h5>",
    "score": 2,
    "explanation": "This HTML code displays the text 'Hello, World!' as a heading level 5."
  },
  {
    "id": 7,
    "lang": "html",
    "code": "<p>This is a paragraph.</p>",
    "score": 2,
    "explanation": "This HTML code creates a paragraph containing the text 'This is a paragraph.'."
  },
  {
    "id": 8,
    "lang": "html",
    "code": "<ul class=\"list\" >\n  <li>Item 1</li>\n  <li>Item 2</li>\n  <li>Item 3</li>\n</ul>",
    "score": 2,
    "explanation": "This HTML code defines an unordered list with a class 'list' and contains three list items: 'Item 1', 'Item 2', and 'Item 3'."
  },
  {
    "id": 9,
    "lang": "html",
    "code": "<a href=\"https://www.example.com\">Visit Example</a>",
    "score": 2,
    "explanation": "This HTML code creates a hyperlink with the text 'Visit Example' that points to the URL 'https://www.example.com'."
  },
  {
    "id": 10,
    "lang": "html",
    "code": "<img src=\"image.webp\" alt=\"Image\">",
    "score": 2,
    "explanation": "This HTML code inserts an image with the source 'image.webp' and the alternate text 'Image'."
  },
  {
    "id": 11,
    "lang": "css",
    "code": "body {\n    background-color: #f2f2f2;\n}",
    "score": 2,
    "explanation": "This CSS code sets the background color of the body element to '#f2f2f2'."
  },
  {
    "id": 12,
    "lang": "css",
    "code": "h1 {\n    color: red;\n}",
    "score": 2,
    "explanation": "This CSS code sets the color of all h1 elements to red."
  },
  {
    "id": 13,
    "lang": "css",
    "code": "p {\n    font-size: 18px;\n}",
    "score": 2,
    "explanation": "This CSS code sets the font size of all p elements to 18 pixels."
  },
  {
    "id": 14,
    "lang": "css",
    "code": "div {\n    border: 1px solid black;\n}",
    "score": 2,
    "explanation": "This CSS code adds a 1-pixel solid black border to all div elements."
  },
  {
    "id": 15,
    "lang": "css",
    "code": ".container {\n    width: 100%;\n    height: 300px;\n    background-color: lightblue;\n}",
    "score": 2,
    "explanation": "This CSS code targets elements with the class 'container' and sets their width to 100%, height to 300 pixels, and background color to lightblue."
  },
  {
    "id": 16,
    "lang": "javascript",
    "code": "function power(base, exponent) {\n    return base ** exponent;\n}",
    "score": 2,
    "explanation": "This JavaScript function named 'power' takes two parameters, 'base' and 'exponent', and returns the result of raising the 'base' to the 'exponent'."
  },
  {
    "id": 17,
    "lang": "javascript",
    "code": "function sumArray(arr) {\n    return arr.reduce((sum, num) => sum + num, 0);\n}",
    "score": 2,
    "explanation": "This JavaScript function named 'sumArray' takes an array as a parameter and uses the 'reduce' method to calculate the sum of all the numbers in the array."
  },
  {
    "id": 18,
    "lang": "javascript",
    "code": "function capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}",
    "score": 2,
    "explanation": "This JavaScript function named 'capitalize' takes a string as a parameter and returns the string with the first character capitalized."
  },
  {
    "id": 19,
    "lang": "javascript",
    "code": "function reverseArray(arr) {\n    return arr.reverse();\n}",
    "score": 2,
    "explanation": "This JavaScript function named 'reverseArray' takes an array as a parameter and reverses the order of its elements."
  },
  {
    "id": 20,
    "lang": "javascript",
    "code": "function findAverage(arr) {\n    const sum = arr.reduce((total, num) => total + num, 0);\n    return sum / arr.length;\n}",
    "score": 2,
    "explanation": "This JavaScript function named 'findAverage' takes an array as a parameter, calculates the sum of its elements using the 'reduce' method, and returns the average by dividing the sum by the length of the array."
  },
  {
    "id": 21,
    "lang": "javascript",
    "code": "function removeFalsyValues(arr) {\n    return arr.filter(Boolean);\n}",
    "score": 2,
    "explanation": "This JavaScript function named 'removeFalsyValues' takes an array as a parameter and uses the 'filter' method with the 'Boolean' function to remove all falsy values (e.g., false, null, 0, '', undefined, NaN) from the array."
  },
  {
    "id": 22,
    "lang": "javascript",
    "code": "function getRandomNumber(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}",
    "score": 2,
    "explanation": "This JavaScript function named 'getRandomNumber' takes a minimum value 'min' and a maximum value 'max' as parameters. It uses the 'Math.random' function to generate a random number between 'min' and 'max', inclusive, and then rounds it down to the nearest integer using 'Math.floor'."
  },
  {
    "id": 23,
    "lang": "javascript",
    "code": "function formatDate(date) {\n    const options = { year: 'numeric', month: 'long', day: 'numeric' };\n    return date.toLocaleDateString('en-US', options);\n}",
    "score": 2,
    "explanation": "This JavaScript function named 'formatDate' takes a date object as a parameter. It defines an 'options' object with the desired date formatting options. It then uses the 'toLocaleDateString' method with the 'en-US' locale and the 'options' object to format the date as a string with the full month name, day, and year in numeric format."
  },
  {
    "id": 24,
    "lang": "javascript",
    "code": "function removeDuplicates(arr) {\n    return [...new Set(arr)];\n}",
    "score": 2,
    "explanation": "This JavaScript function named 'removeDuplicates' takes an array as a parameter. It utilizes the 'Set' object to remove duplicate elements from the array by converting it to a Set and then spreading it back into an array using the spread syntax."
  },
  {
    "id": 25,
    "lang": "javascript",
    "code": "function calculateHypotenuse(a, b) {\n    return Math.sqrt(a ** 2 + b ** 2);\n}",
    "score": 2,
    "explanation": "This JavaScript function named 'calculateHypotenuse' takes the lengths of the two sides of a right triangle, 'a' and 'b', as parameters. It uses the Pythagorean theorem to calculate and return the length of the hypotenuse by taking the square root of the sum of the squares of 'a' and 'b'."
  },
  {
    "id": 26,
    "lang": "javascript",
    "code": "function countOccurrences(arr, num) {\n    return arr.filter(item => item === num).length;\n}",
    "score": 2,
    "explanation": "This JavaScript function named 'countOccurrences' takes an array 'arr' and a number 'num' as parameters. It uses the 'filter' method to create a new array containing only the elements that are equal to 'num'. The length of the filtered array is then returned, representing the count of occurrences of 'num' in 'arr'."
  },
  { 
    "id": 27,
    "lang": "javascript",
    "code": "function getRandomElement(arr) {\n    return arr[Math.floor(Math.random() * arr.length)];\n}",
    "score": 2,
    "explanation": "This JavaScript function named 'getRandomElement' takes an array 'arr' as a parameter. It generates a random index by multiplying 'Math.random()' with the length of the array and flooring the result using 'Math.floor()'. It then returns the element at the randomly generated index from the array."
  },
  {
    "id": 28,
    "lang": "javascript",
    "code": "function removeFalsyProperties(obj) {\n    return Object.fromEntries(Object.entries(obj).filter(([_, value]) => Boolean(value)));\n}",
    "score": 2,
    "explanation": "This JavaScript function named 'removeFalsyProperties' takes an object 'obj' as a parameter. It uses the 'Object.entries' method to get an array of key-value pairs from the object. It then applies the 'filter' method on the key-value pairs array, keeping only the entries where the value is truthy. Finally, it converts the filtered array back to an object using 'Object.fromEntries' and returns it."
  },
  {
    "id": 29,
    "lang": "javascript",
    "code": "function truncateString(str, maxLength) {\n    if (str.length > maxLength) {\n        return str.slice(0, maxLength) + '...';\n    }\n    return str;\n}",
    "score": 2,
    "explanation": "This JavaScript function named 'truncateString' takes a string 'str' and a maximum length 'maxLength' as parameters. It checks if the length of the string is greater than the maximum length. If it is, the string is truncated using the 'slice' method to extract the substring from index 0 to 'maxLength', and '...' is appended. If the string is not longer than the maximum length, it is returned as is."
  },
  {
    "id": 30,
    "lang": "javascript",
    "code": "function getUniqueValues(arr) {\n    return [...new Set(arr)];\n}",
    "score": 2,
    "explanation": "This JavaScript function named 'getUniqueValues' takes an array 'arr' as a parameter. It utilizes the 'Set' object to remove duplicate elements from the array by converting it to a Set and then spreading it back into an array using the spread syntax. The resulting array contains only unique values."
  },
  {
    "id": 31,
    "lang": "html",
    "code": "<h2>Welcome to My Website</h2>",
    "score": 2,
    "explanation": "This HTML code represents a level 2 heading element (<h2>) displaying the text 'Welcome to My Website'."
  },
  {
    "id": 32,
    "lang": "html",
    "code": "<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>",
    "score": 2,
    "explanation": "This HTML code represents a paragraph element (<p>) containing the text 'Lorem ipsum dolor sit amet, consectetur adipiscing elit'."
  },
  {
    "id": 33,
    "lang": "html",
    "code": "<div class=\"container\">\n  <h3>Content</h3>\n  <p>This is some content.</p>\n</div>",
    "score": 2,
    "explanation": "This HTML code represents a <div> element with the class 'container'. It contains a level 3 heading element (<h3>) displaying the text 'Content', and a paragraph element (<p>) containing the text 'This is some content'."
  },
  {
    "id": 34,
    "lang": "html",
    "code": "<a href=\"#\">Click Me</a>",
    "score": 2,
    "explanation": "This HTML code represents a hyperlink element (<a>) with the 'href' attribute set to '#' and displaying the text 'Click Me'."
  },
  {
    "id": 35,
    "lang": "html",
    "code": "<img src=\"image.jpg\" alt=\"Image\">",
    "score": 2,
    "explanation": "This HTML code represents an image element (<img>) with the 'src' attribute set to 'image.jpg' and the 'alt' attribute set to 'Image'."
  },
  {
    "id": 36,
    "lang": "html",
    "code": "<ul>\n  <li>Item 1</li>\n  <li>Item 2</li>\n  <li>Item 3</li>\n</ul>",
    "score": 2,
    "explanation": "This HTML code represents an unordered list element (<ul>) containing three list item elements (<li>) with the texts 'Item 1', 'Item 2', and 'Item 3'."
  },
  {
    "id": 37,
    "lang": "html",
    "code": "<input type=\"text\" placeholder=\"Enter your name\">",
    "score": 2,
    "explanation": "This HTML code represents an input element (<input>) with the 'type' attribute set to 'text' and the 'placeholder' attribute set to 'Enter your name'."
  },
  {
    "id": 38,
    "lang": "html",
    "code": "<h4>About Us</h4>\n<p>We are a team of developers.</p>",
    "score": 2,
    "explanation": "This HTML code represents a level 4 heading element (<h4>) displaying the text 'About Us', followed by a paragraph element (<p>) containing the text 'We are a team of developers'."
  },
  {
    "id": 39,
    "lang": "html",
    "code": "<table>\n  <tr>\n    <th>Name</th>\n    <th>Age</th>\n  </tr>\n  <tr>\n    <td>John</td>\n    <td>25</td>\n  </tr>\n</table>",
    "score": 2,
    "explanation": "This HTML code represents a table element (<table>) with two table rows (<tr>). The first row contains two table header cells (<th>) with the texts 'Name' and 'Age'. The second row contains two table data cells (<td>) with the texts 'John' and '25'."
  },
  {
    "id": 40,
    "lang": "html",
    "code": "<form action=\"/submit\" method=\"POST\">\n  <input type=\"text\" name=\"username\" placeholder=\"Enter your username\">\n  <input type=\"password\" name=\"password\" placeholder=\"Enter your password\">\n  <button type=\"submit\">Submit</button>\n</form>",
    "score": 2,
    "explanation": "This HTML code represents a form element (<form>) with the 'action' attribute set to '/submit' and the 'method' attribute set to 'POST'. Inside the form, there are two input elements (<input>) - one with 'type' set to 'text' and 'name' set to 'username', and the other with 'type' set to 'password' and 'name' set to 'password'. Both inputs have placeholder attributes. Lastly, there is a button element (<button>) with 'type' set to 'submit' and displaying the text 'Submit'."
  },
  {
    "id": 41,
    "lang": "html",
    "code": "<nav>\n  <a href=\"#\">Home</a>\n  <a href=\"#\">About</a>\n  <a href=\"#\">Contact</a>\n</nav>",
    "score": 2,
    "explanation": "This HTML code represents a navigation element (<nav>). Inside the navigation element, there are three hyperlink elements (<a>) with 'href' attributes set to '#' and displaying the texts 'Home', 'About', and 'Contact'."
  },
  {
    "id": 42,
    "lang": "html",
    "code": "<label for=\"name\">Name:</label>\n<input type=\"text\" id=\"name\" name=\"name\">",
    "score": 2,
    "explanation": "This HTML code represents a label element (<label>) with the 'for' attribute set to 'name' and displaying the text 'Name:'. It is followed by an input element (<input>) with the 'type' attribute set to 'text', the 'id' attribute set to 'name', and the 'name' attribute set to 'name'."
  },
  {
    "id": 43,
    "lang": "html",
    "code": "<header>\n  <h1>My Website</h1>\n</header>",
    "score": 2,
    "explanation": "This HTML code represents a header element (<header>) containing a level 1 heading element (<h1>) displaying the text 'My Website'."
  },
  {
    "id": 44,
    "lang": "html",
    "code": "<section>\n  <h2>Section Title</h2>\n  <p>This is some content in a section.</p>\n</section>",
    "score": 2,
    "explanation": "This HTML code represents a section element (<section>) containing a level 2 heading element (<h2>) displaying the text 'Section Title', followed by a paragraph element (<p>) containing the text 'This is some content in a section'."
  },
  {
    "id": 45,
    "lang": "html",
    "code": "<footer>\n  <p>&copy; 2023 My Website</p>\n</footer>",
    "score": 2,
    "explanation": "This HTML code represents a footer element (<footer>) containing a paragraph element (<p>) displaying the text '&copy; 2023 My Website'."
  },
  {
    "id": 46,
    "lang": "css",
    "code": "body {\n    font-family: Arial, sans-serif;\n}",
    "score": 2,
    "explanation": "This CSS code sets the font family of the body element to Arial or a sans-serif font."
  },
  {
    "id": 47,
    "lang": "css",
    "code": "h1 {\n    color: blue;\n    font-size: 24px;\n}",
    "score": 2,
    "explanation": "This CSS code sets the color of h1 headings to blue and the font size to 24 pixels."
  },
  {
    "id": 48,
    "lang": "css",
    "code": "p {\n    margin-bottom: 10px;\n}",
    "score": 2,
    "explanation": "This CSS code adds a bottom margin of 10 pixels to paragraphs (p elements)."
  },
  {
    "id": 49,
    "lang": "css",
    "code": ".container {\n    width: 100%;\n    max-width: 800px;\n    margin: 0 auto;\n    padding: 20px;\n}",
    "score": 2,
    "explanation": "This CSS code targets elements with the class 'container' and sets their width to 100%, maximum width to 800 pixels, centers them horizontally with auto margins, and adds 20 pixels of padding."
  },
  {
    "id": 50,
    "lang": "css",
    "code": "a {\n    color: #337ab7;\n    text-decoration: none;\n}",
    "score": 2,
    "explanation": "This CSS code sets the color of links (a elements) to a specific shade of blue (#337ab7) and removes the underline text decoration."
  },
  {
    "id": 51,
    "lang": "css",
    "code": "ul li {\n    list-style-type: disc;\n    margin-left: 20px;\n}",
    "score": 2,
    "explanation": "This CSS code sets the list-style type of list items (li elements) within unordered lists (ul elements) to a disc shape and adds a left margin of 20 pixels."
  },
  {
    "id": 52,
    "lang": "css",
    "code": "input[type=\"text\"] {\n    width: 200px;\n    padding: 5px;\n}",
    "score": 2,
    "explanation": "This CSS code targets text input fields (input elements with the type attribute set to 'text') and sets their width to 200 pixels and adds 5 pixels of padding."
  },
  {
    "id": 53,
    "lang": "css",
    "code": "h2 {\n    font-size: 20px;\n    font-weight: bold;\n}",
    "score": 2,
    "explanation": "This CSS code sets the font size of h2 headings to 20 pixels and makes them bold by adjusting the font weight."
  },
  {
    "id": 54,
    "lang": "css",
    "code": "table {\n    border-collapse: collapse;\n    width: 100%;\n}",
    "score": 2,
    "explanation": "This CSS code sets the table element to collapse its borders (remove the space between cells) and occupy 100% of its parent's width."
  },
  {
    "id": 55,
    "lang": "css",
    "code": ".header {\n    background-color: #f2f2f2;\n    padding: 10px;\n}",
    "score": 2,
    "explanation": "This CSS code targets elements with the class 'header' and sets their background color to a specific shade of gray (#f2f2f2) and adds 10 pixels of padding."
  },
  {
    "id": 56,
    "lang": "css",
    "code": "form {\n    margin-top: 10px;\n}",
    "score": 2,
    "explanation": "This CSS code adds a top margin of 10 pixels to form elements."
  },
  {
    "id": 57,
    "lang": "css",
    "code": ".btn {\n    background-color: #337ab7;\n    color: #fff;\n    padding: 5px 10px;\n    border-radius: 3px;\n}",
    "score": 2,
    "explanation": "This CSS code targets elements with the class 'btn' and sets their background color to a specific shade of blue (#337ab7), text color to white (#fff), padding to 5 pixels vertically and 10 pixels horizontally, and adds a border radius of 3 pixels."
  },
  {
    "id": 58,
    "lang": "css",
    "code": "footer {\n    background-color: #f2f2f2;\n    padding: 10px;\n    text-align: center;\n}",
    "score": 2,
    "explanation": "This CSS code targets footer elements and sets their background color to a specific shade of gray (#f2f2f2), adds 10 pixels of padding, and aligns the text in the center."
  },
  {
    "id": 59,
    "lang": "css",
    "code": ".section {\n    margin-bottom: 20px;\n}",
    "score": 2,
    "explanation": "This CSS code targets elements with the class 'section' and adds a bottom margin of 20 pixels."
  },
  {
    "id": 60,
    "lang": "css",
    "code": ".error {\n    color: red;\n}",
    "score": 2,
    "explanation": "This CSS code targets elements with the class 'error' and sets their text color to red."
  }, {
    "id": 71,
    "lang": "react",
    "code": "function Counter() {\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    document.title = `Count: ${count}`;\n  }, [count]);\n\n  return (\n    <div>\n      <p>Count: {count}</p>\n      <button onClick={() => setCount(count + 1)}>Increment</button>\n    </div>\n  );\n}",
    "score": 2,
    "explanation": "This react code demonstrates the usage of 'useState' and 'useEffect' hooks in React. The 'Counter' component maintains a count state using 'useState' and updates the document title using 'useEffect'. The title is updated whenever the count changes."
},

{
    "id": 72,
    "lang": "react",
    "code": "const numbers = [1, 2, 3, 4, 5];\n\nconst doubledNumbers = numbers.map(num => num * 2);\n\nconsole.log(doubledNumbers);",
    "score": 2,
    "explanation": "This react code demonstrates the usage of arrow functions. The 'numbers' array contains numbers 1 to 5. The 'map' method is used with an arrow function to create a new 'doubledNumbers' array by doubling each number in the 'numbers' array. The code then logs the contents of 'doubledNumbers' to the console."
},
{
    "id": 73,
    "lang": "react",
    "code": "const arr1 = [1, 2, 3];\nconst arr2 = [...arr1, 4, 5, 6];\n\nconsole.log(arr2);",
    "score": 2,
    "explanation": "This react code demonstrates the usage of the spread operator. The 'arr1' array contains elements 1, 2, and 3. The spread operator is used to create a new 'arr2' array by adding additional elements (4, 5, and 6) to the end of 'arr1'. The code then logs the contents of 'arr2' to the console."
},

{
    "id": 74,
    "lang": "react",
    "code": "const person = {\n  name: 'John',\n  age: 25,\n  city: 'New York'\n};\n\nconst { name, age } = person;\n\nconsole.log(name, age);",
    "score": 2,
    "explanation": "This react code demonstrates destructuring an object. The 'person' object has properties 'name', 'age', and 'city'. Using object destructuring, the 'name' and 'age' properties are extracted into variables of the same names. The code then logs the values of 'name' and 'age' to the console."
}, {
    "id": 75,
    "lang": "react",
    "code": "const books = [\n  { title: 'Book 1', author: 'Author 1' },\n  { title: 'Book 2', author: 'Author 2' },\n  { title: 'Book 3', author: 'Author 3' }\n];\n\nconst bookItems = books.map(book => (\n  <div>\n    <h3>{book.title}</h3>\n    <p>Author: {book.author}</p>\n  </div>\n));\n\nreturn <div>{bookItems}</div>;",
    "score": 2,
    "explanation": "This react code demonstrates the usage of lists and the 'map' method in React. The 'books' array contains objects representing books with 'title' and 'author' properties. Using the 'map' method, a new array 'bookItems' is created by mapping each book object to a JSX element that displays the book's title and author. Finally, the 'bookItems' array is rendered within a parent div element."
}, {
    "id": 76,
    "lang": "react",
    "code": "const numbers = [1, 2, 3, 4, 5];\n\nconst sum = numbers.reduce((acc, curr) => acc + curr, 0);\n\nconsole.log(sum);",
    "score": 2,
    "explanation": "This react code demonstrates the usage of the 'reduce' method. The 'numbers' array contains numbers 1 to 5. The 'reduce' method is used to calculate the sum of all the numbers in the array. The code initializes the accumulator 'acc' to 0 and adds each element 'curr' to it. The final sum is then logged to the console."
}, {
    "id": 77,
    "lang": "react",
    "code": "function Header() {\n  return <h1>Welcome to my website</h1>;\n}\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <p>This is the content of my website.</p>\n    </div>\n  );\n}",
    "score": 2,
    "explanation": "This react code demonstrates the usage of components in React. The 'Header' component renders a welcome message. The 'App' component renders the 'Header' component and displays some content below it. The components are nested within the JSX structure."
}, {
    "id": 78,
    "lang": "react",
    "code": "function Button() {\n  const handleClick = () => {\n    console.log('Button clicked');\n  };\n\n  return <button onClick={handleClick}>Click me</button>;\n}",
    "score": 2,
    "explanation": "This react code demonstrates the usage of events in React. The 'Button' component defines a 'handleClick' function that logs a message when the button is clicked. The 'onClick' event is attached to the button, and when clicked, it triggers the 'handleClick' function."
}, {
    "id": 79,
    "lang": "react",
    "code": "function Greeting({ name }) {\n  return name ? <p>Hello, {name}!</p> : <p>Hello, Guest!</p>;\n}\n\nfunction App() {\n  return (\n    <div>\n      <Greeting name=\"John\" />\n      <Greeting />\n    </div>\n  );\n}",
    "score": 2,
    "explanation": "This react code demonstrates the usage of conditionals in React. The 'Greeting' component receives a 'name' prop and displays a personalized greeting if the 'name' is provided. If the 'name' is not provided, it displays a default greeting for guests. The 'App' component renders two 'Greeting' components, one with a name prop and another without."
}, {
    "id": 80,
    "lang": "react",
    "code": "const items = ['Item 1', 'Item 2', 'Item 3'];\n\nconst itemElements = items.map((item, index) => (\n  <li key={index}>{item}</li>\n));\n\nreturn <ul>{itemElements}</ul>;",
    "score": 2,
    "explanation": "This react code demonstrates the usage of lists and the 'map' method in React. The 'items' array contains strings representing items. Using the 'map' method, a new array 'itemElements' is created by mapping each item to a JSX 'li' element with a unique 'key' attribute. Finally, the 'itemElements' array is rendered within a 'ul' element."
}, {
    "id": 81,
    "lang": "react",
    "code": "import React, { useState, useEffect } from 'react';\n\nfunction Counter() {\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    document.title = `Count: ${count}`;\n  }, [count]);\n\n  const handleIncrement = () => {\n    setCount(count + 1);\n  };\n\n  return (\n    <div>\n      <p>Count: {count}</p>\n      <button onClick={handleIncrement}>Increment</button>\n    </div>\n  );\n}",
    "score": 2,
    "explanation": "This react code demonstrates the usage of hooks, specifically 'useState' and 'useEffect', in React. The 'Counter' component maintains a count state using 'useState' and updates the document title using 'useEffect'. The 'handleIncrement' function is used to increment the count when the button is clicked."
}, {
    "id": 82,
    "lang": "react",
    "code": "const arr1 = [1, 2, 3];\nconst arr2 = [...arr1, 4, 5, 6];\n\nconsole.log(arr2);",
    "score": 2,
    "explanation": "This react code demonstrates the usage of the spread operator. The 'arr1' array contains elements 1, 2, and 3. The spread operator is used to create a new 'arr2' array by adding additional elements (4, 5, and 6) to the end of 'arr1'. The code then logs the contents of 'arr2' to the console."
}, {
    "id": 83,
    "lang": "react",
    "code": "const person = {\n  name: 'John',\n  age: 25,\n  city: 'New York'\n};\n\nconst { name, age } = person;\n\nconsole.log(name, age);",
    "score": 2,
    "explanation": "This react code demonstrates destructuring an object. The 'person' object has properties 'name', 'age', and 'city'. Using object destructuring, the 'name' and 'age' properties are extracted into variables of the same names. The code then logs the values of 'name' and 'age' to the console."
}, {
    "id": 84,
    "lang": "react",
    "code": "const numbers = [1, 2, 3, 4, 5];\n\nconst doubledNumbers = numbers.map(num => num * 2);\n\nconsole.log(doubledNumbers);",
    "score": 2,
    "explanation": "This react code demonstrates the usage of arrow functions. The 'numbers' array contains numbers 1 to 5. The 'map' method is used with an arrow function to create a new 'doubledNumbers' array by doubling each number in the 'numbers' array. The code then logs the contents of 'doubledNumbers' to the console."
}, {
    "id": 85,
    "lang": "react",
    "code": "const numbers = [1, 2, 3, 4, 5];\n\nconst sum = numbers.reduce((acc, curr) => acc + curr, 0);\n\nconsole.log(sum);",
    "score": 2,
    "explanation": "This react code demonstrates the usage of the 'reduce' method. The 'numbers' array contains numbers 1 to 5. The 'reduce' method is used to calculate the sum of all the numbers in the array. The code initializes the accumulator 'acc' to 0 and adds each element 'curr' to it. The final sum is then logged to the console."
}, 
{
  "id": 90,
  "lang": "react",
  "code": "import React from 'react';\n\nfunction Square({ value, onClick }) {\n  return (\n    <button className=\"square\" onClick={onClick}>\n      {value}\n    </button>\n  );\n}\n\nfunction Board() {\n  const handleClick = () => {\n    // Handle square click\n  };\n\n  return (\n    <div className=\"board\">\n      <div className=\"row\">\n        <Square value=\"1\" onClick={handleClick} />\n        <Square value=\"2\" onClick={handleClick} />\n        <Square value=\"3\" onClick={handleClick} />\n      </div>\n      <div className=\"row\">\n        <Square value=\"4\" onClick={handleClick} />\n        <Square value=\"5\" onClick={handleClick} />\n        <Square value=\"6\" onClick={handleClick} />\n      </div>\n      <div className=\"row\">\n        <Square value=\"7\" onClick={handleClick} />\n        <Square value=\"8\" onClick={handleClick} />\n        <Square value=\"9\" onClick={handleClick} />\n      </div>\n    </div>\n  );\n}",
  "score": 3,
  "explanation": "This React code represents a tic-tac-toe game board. The 'Square' component represents an individual square on the board, which receives a 'value' prop and an 'onClick' prop. The 'Board' component renders a 3x3 grid of 'Square' components, passing appropriate values and a click handler to each square. You can handle the square click functionality within the 'handleClick' function in the 'Board' component."
},
{
  "id": 91,
  "lang": "react",
  "code": "import React from 'react';\n\nfunction Button({ onClick, children }) {\n  return (\n    <button onClick={onClick}>\n      {children}\n    </button>\n  );\n}",
  "explanation": "Button is a React component that receives two props: onClick and children. It renders a button element that triggers the onClick event handler when clicked. The content between the opening and closing tags of the Button component represents the button's label or inner text."
},
{
  "id": 92,
  "lang": "react",
  "code": "import React, { useState } from 'react';\n\nfunction Counter() {\n  const [count, setCount] = useState(0);\n\n  const increment = () => {\n    setCount(count + 1);\n  };\n\n  return (\n    <div>\n      <p>Count: {count}</p>\n      <button onClick={increment}>Increment</button>\n    </div>\n  );\n}",
  "explanation": "Counter is a React component that uses the useState hook to manage a count state. It renders a count value and two buttons for incrementing and decrementing the count."
},
{
  "id": 93,
  "lang": "react",
  "code": "import React, { useState } from 'react';\n\nfunction TextInput() {\n  const [text, setText] = useState('');\n\n  const handleChange = (event) => {\n    setText(event.target.value);\n  };\n\n  return (\n    <div>\n      <input type=\"text\" value={text} onChange={handleChange} />\n      <p>You typed: {text}</p>\n    </div>\n  );\n}",
  "explanation": "TextInput is a React component that uses the useState hook to manage a text state. It renders an input field and displays the typed text below it."
},
{
  "id": 94,
  "lang": "react",
  "code": "import React, { useState } from 'react';\n\nfunction Toggle() {\n  const [isOn, setIsOn] = useState(false);\n\n  const handleToggle = () => {\n    setIsOn(!isOn);\n  };\n\n  return (\n    <button onClick={handleToggle}>\n      {isOn ? 'ON' : 'OFF'}\n    </button>\n  );\n}",
   "explanation": "Toggle is a React component that uses the useState hook to manage a toggle state. It renders a button that toggles between ON and OFF when clicked."
},
{
  "id": 95,
  "lang": "react",
  "code": "import React, { useEffect, useState } from 'react';\n\nfunction Timer() {\n  const [seconds, setSeconds] = useState(0);\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setSeconds((prevSeconds) => prevSeconds + 1);\n    }, 1000);\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  return <p>Seconds: {seconds}</p>;\n}",
   "explanation": "Timer is a React component that uses the useState and useEffect hooks. It renders a timer that increments the seconds state every second."
},
{
  "id": 96,
  "lang": "react",
  "code": "import React from 'react';\n\nfunction ListItem({ item }) {\n  return <li>{item}</li>;\n}\n\nfunction List() {\n  const items = ['Item 1', 'Item 2', 'Item 3'];\n\n  return (\n    <ul>\n      {items.map((item) => (\n        <ListItem key={item} item={item} />\n      ))}\n    </ul>\n  );\n}",
   "explanation": "ListItem is a React component that receives an item prop. It renders an <li> element with the item prop as its content."
},
{
  "id": 97,
  "lang": "react",
  "code": "import React, { useState } from 'react';\n\nfunction Tabs() {\n  const [activeTab, setActiveTab] = useState(0);\n\n  const handleTabClick = (index) => {\n    setActiveTab(index);\n  };\n\n  const tabs = ['Tab 1', 'Tab 2', 'Tab 3'];\n\n  return (\n    <div>\n      <div>\n        {tabs.map((tab, index) => (\n          <button\n            key={index}\n            onClick={() => handleTabClick(index)}\n            className={index === activeTab ? 'active' : ''}\n          >\n            {tab}\n          </button>\n        ))}\n      </div>\n      <div>\n        {tabs[activeTab]}\n      </div>\n    </div>\n  );\n}",
   "explanation": "Tabs is a React component that uses the useState hook to manage the active tab state. It renders a set of buttons for each tab in an array and updates the active tab when a button is clicked."
},
{
  "id": 98,
  "lang": "react",
  "code": "import React from 'react';\n\nfunction Card({ title, content }) {\n  return (\n    <div className=\"card\">\n      <h2>{title}</h2>\n      <p>{content}</p>\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <div>\n      <Card title=\"Card 1\" content=\"This is the content of Card 1.\" />\n      <Card title=\"Card 2\" content=\"This is the content of Card 2.\" />\n      <Card title=\"Card 3\" content=\"This is the content of Card 3.\" />\n    </div>\n  );\n}",
   "explanation": "App is a React component that renders multiple Card components with different titles and contents."
},
{
  "id": 99,
  "lang": "react",
  "code": "import React from 'react';\n\nfunction Header() {\n  return <h1>My App</h1>;\n}\n\nfunction Content() {\n  return <p>Welcome to my app!</p>;\n}\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Content />\n    </div>\n  );\n}",
   "explanation": "App is a React component that renders a Header component followed by a Content component."
},
{
  "id": 100,
  "lang": "react",
  "code": "import React from 'react';\n\nfunction Avatar({ src, alt }) {\n  return <img src={src} alt={alt} />;\n}\n\nfunction UserCard({ user }) {\n  return (\n    <div>\n      <Avatar src={user.avatar} alt={user.name} />\n      <h2>{user.name}</h2>\n      <p>{user.email}</p>\n    </div>\n  );\n}",
   "explanation": "UserCard is a React component that renders user information, including an avatar image, name, and email. It receives the user data as props."
},
{
  "id": 101,
  "lang": "react",
  "code": "import React from 'react';\n\nfunction Square({ value, onClick }) {\n  return (\n    <button className=\"square\" onClick={onClick}>\n      {value}\n    </button>\n  );\n}\n\nfunction Board() {\n  const handleClick = () => {\n    // Handle square click\n  };\n\n  return (\n    <div className=\"board\">\n      <div className=\"row\">\n        <Square value=\"1\" onClick={handleClick} />\n        <Square value=\"2\" onClick={handleClick} />\n        <Square value=\"3\" onClick={handleClick} />\n      </div>\n      <div className=\"row\">\n        <Square value=\"4\" onClick={handleClick} />\n        <Square value=\"5\" onClick={handleClick} />\n        <Square value=\"6\" onClick={handleClick} />\n      </div>\n      <div className=\"row\">\n        <Square value=\"7\" onClick={handleClick} />\n        <Square value=\"8\" onClick={handleClick} />\n        <Square value=\"9\" onClick={handleClick} />\n      </div>\n    </div>\n  );\n}",
   "explanation": "Board is a React component that represents a tic-tac-toe board. It renders multiple Square components and handles click events for each square."
},
{
  "id": 102,
  "lang": "react",
  "code": "import React from 'react';\n\nfunction Greeting({ name }) {\n  return <h1>Hello, {name}!</h1>;\n}\n\nfunction App() {\n  return (\n    <div>\n      <Greeting name=\"Alice\" />\n      <Greeting name=\"Bob\" />\n      <Greeting name=\"Charlie\" />\n    </div>\n  );\n}",
  "explanation": "App is a React component that renders multiple Greeting components with different names."
},
{
  "id": 103,
  "lang": "react",
  "code": "import React, { useState } from 'react';\n\nfunction Counter() {\n  const [count, setCount] = useState(0);\n\n  const increment = () => {\n    setCount(count + 1);\n  };\n\n  const decrement = () => {\n    setCount(count - 1);\n  };\n\n  return (\n    <div>\n      <p>Count: {count}</p>\n      <button onClick={increment}>Increment</button>\n      <button onClick={decrement}>Decrement</button>\n    </div>\n  );\n}",
   "explanation": "Counter is a React component that uses the useState hook to manage a count state. It renders a count value and two buttons for incrementing and decrementing the count."
},
{
  "id": 104,
  "lang": "react",
  "code": "import React, { useState } from 'react';\n\nfunction Input() {\n  const [text, setText] = useState('');\n\n  const handleChange = (event) => {\n    setText(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    // Handle form submission\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" value={text} onChange={handleChange} />\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n}",
   "explanation": "Counter is a React component that uses the useState hook to manage a count state. It renders a count value and two buttons for incrementing and decrementing the count."
}
]
